// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  AuthControllerLoginV1Data,
  AuthControllerLoginV1Response,
  AuthControllerRegisterV1Data,
  AuthControllerRegisterV1Response,
  AuthControllerMeV1Data,
  AuthControllerMeV1Response,
  AuthControllerUpdateV1Data,
  AuthControllerUpdateV1Response,
  AuthControllerDeleteV1Data,
  AuthControllerDeleteV1Response,
  AuthControllerRefreshV1Data,
  AuthControllerRefreshV1Response,
  AuthControllerLogoutV1Data,
  AuthControllerLogoutV1Response,
  CustomersControllerCreateV1Data,
  CustomersControllerCreateV1Response,
  CustomersControllerFindAllV1Data,
  CustomersControllerFindAllV1Response,
  CustomersControllerFindByIdV1Data,
  CustomersControllerFindByIdV1Response,
  CustomersControllerUpdateV1Data,
  CustomersControllerUpdateV1Response,
  CustomersControllerRemoveV1Data,
  CustomersControllerRemoveV1Response,
  FilesLocalControllerUploadFileV1Data,
  FilesLocalControllerUploadFileV1Response,
  HomeControllerAppInfoData,
  HomeControllerAppInfoResponse,
  OrderHistoriesControllerCreateV1Data,
  OrderHistoriesControllerCreateV1Response,
  OrderHistoriesControllerFindAllV1Data,
  OrderHistoriesControllerFindAllV1Response,
  OrderHistoriesControllerFindByIdV1Data,
  OrderHistoriesControllerFindByIdV1Response,
  OrdersControllerCreateV1Data,
  OrdersControllerCreateV1Response,
  OrdersControllerFindAllV1Data,
  OrdersControllerFindAllV1Response,
  OrdersControllerFindByIdV1Data,
  OrdersControllerFindByIdV1Response,
  OrdersControllerRemoveV1Data,
  OrdersControllerRemoveV1Response,
  SatisticControllerCountOrderByTimeV1Data,
  SatisticControllerCountOrderByTimeV1Response,
  SatisticControllerTotalRevenueV1Data,
  SatisticControllerTotalRevenueV1Response,
  SatisticControllerTotalOrderV1Data,
  SatisticControllerTotalOrderV1Response,
  SatisticControllerTotalOrderEachStatusV1Data,
  SatisticControllerTotalOrderEachStatusV1Response,
  SatisticControllerTotalCustomerV1Data,
  SatisticControllerTotalCustomerV1Response,
  UsersControllerCreateV1Data,
  UsersControllerCreateV1Response,
  UsersControllerFindAllV1Data,
  UsersControllerFindAllV1Response,
  UsersControllerFindOneV1Data,
  UsersControllerFindOneV1Response,
  UsersControllerUpdateV1Data,
  UsersControllerUpdateV1Response,
  UsersControllerRemoveV1Data,
  UsersControllerRemoveV1Response,
} from "./types.gen";

export class AuthService {
  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns LoginResponseDto
   * @throws ApiError
   */
  public static authControllerLoginV1(
    data: AuthControllerLoginV1Data
  ): CancelablePromise<AuthControllerLoginV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/email/login",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns void
   * @throws ApiError
   */
  public static authControllerRegisterV1(
    data: AuthControllerRegisterV1Data
  ): CancelablePromise<AuthControllerRegisterV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/email/register",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.xCustomLang
   * @returns User
   * @throws ApiError
   */
  public static authControllerMeV1(
    data: AuthControllerMeV1Data = {}
  ): CancelablePromise<AuthControllerMeV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/auth/me",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns User
   * @throws ApiError
   */
  public static authControllerUpdateV1(
    data: AuthControllerUpdateV1Data
  ): CancelablePromise<AuthControllerUpdateV1Response> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/v1/auth/me",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.xCustomLang
   * @returns void
   * @throws ApiError
   */
  public static authControllerDeleteV1(
    data: AuthControllerDeleteV1Data = {}
  ): CancelablePromise<AuthControllerDeleteV1Response> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/v1/auth/me",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.xCustomLang
   * @returns RefreshResponseDto
   * @throws ApiError
   */
  public static authControllerRefreshV1(
    data: AuthControllerRefreshV1Data = {}
  ): CancelablePromise<AuthControllerRefreshV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/refresh",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.xCustomLang
   * @returns void
   * @throws ApiError
   */
  public static authControllerLogoutV1(
    data: AuthControllerLogoutV1Data = {}
  ): CancelablePromise<AuthControllerLogoutV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/auth/logout",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}

export class CustomersService {
  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns Customer
   * @throws ApiError
   */
  public static customersControllerCreateV1(
    data: CustomersControllerCreateV1Data
  ): CancelablePromise<CustomersControllerCreateV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/customers",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.page
   * @param data.limit
   * @param data.name
   * @param data.phone
   * @param data.address
   * @param data.xCustomLang
   * @returns InfinityPaginationCustomerResponseDto
   * @throws ApiError
   */
  public static customersControllerFindAllV1(
    data: CustomersControllerFindAllV1Data = {}
  ): CancelablePromise<CustomersControllerFindAllV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/customers",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        page: data.page,
        limit: data.limit,
        name: data.name,
        phone: data.phone,
        address: data.address,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns Customer
   * @throws ApiError
   */
  public static customersControllerFindByIdV1(
    data: CustomersControllerFindByIdV1Data
  ): CancelablePromise<CustomersControllerFindByIdV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/customers/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns Customer
   * @throws ApiError
   */
  public static customersControllerUpdateV1(
    data: CustomersControllerUpdateV1Data
  ): CancelablePromise<CustomersControllerUpdateV1Response> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/v1/customers/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns unknown
   * @throws ApiError
   */
  public static customersControllerRemoveV1(
    data: CustomersControllerRemoveV1Data
  ): CancelablePromise<CustomersControllerRemoveV1Response> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/v1/customers/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}

export class FilesService {
  /**
   * @param data The data for the request.
   * @param data.formData
   * @param data.xCustomLang
   * @returns FileResponseDto
   * @throws ApiError
   */
  public static filesLocalControllerUploadFileV1(
    data: FilesLocalControllerUploadFileV1Data
  ): CancelablePromise<FilesLocalControllerUploadFileV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/files/upload",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      formData: data.formData,
      mediaType: "multipart/form-data",
    });
  }
}

export class HomeService {
  /**
   * @param data The data for the request.
   * @param data.xCustomLang
   * @returns unknown
   * @throws ApiError
   */
  public static homeControllerAppInfo(
    data: HomeControllerAppInfoData = {}
  ): CancelablePromise<HomeControllerAppInfoResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}

export class OrderhistoriesService {
  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns OrderHistory
   * @throws ApiError
   */
  public static orderHistoriesControllerCreateV1(
    data: OrderHistoriesControllerCreateV1Data
  ): CancelablePromise<OrderHistoriesControllerCreateV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/order-histories",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.page
   * @param data.limit
   * @param data.orderId
   * @param data.xCustomLang
   * @returns InfinityPaginationOrderHistoryResponseDto
   * @throws ApiError
   */
  public static orderHistoriesControllerFindAllV1(
    data: OrderHistoriesControllerFindAllV1Data = {}
  ): CancelablePromise<OrderHistoriesControllerFindAllV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/order-histories",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        page: data.page,
        limit: data.limit,
        orderId: data.orderId,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns OrderHistory
   * @throws ApiError
   */
  public static orderHistoriesControllerFindByIdV1(
    data: OrderHistoriesControllerFindByIdV1Data
  ): CancelablePromise<OrderHistoriesControllerFindByIdV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/order-histories/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}

export class OrdersService {
  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns Order
   * @throws ApiError
   */
  public static ordersControllerCreateV1(
    data: OrdersControllerCreateV1Data
  ): CancelablePromise<OrdersControllerCreateV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/orders",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.page
   * @param data.limit
   * @param data.code
   * @param data.status
   * @param data.customer
   * @param data.xCustomLang
   * @returns InfinityPaginationOrderResponseDto
   * @throws ApiError
   */
  public static ordersControllerFindAllV1(
    data: OrdersControllerFindAllV1Data = {}
  ): CancelablePromise<OrdersControllerFindAllV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/orders",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        page: data.page,
        limit: data.limit,
        code: data.code,
        status: data.status,
        customer: data.customer,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns Order
   * @throws ApiError
   */
  public static ordersControllerFindByIdV1(
    data: OrdersControllerFindByIdV1Data
  ): CancelablePromise<OrdersControllerFindByIdV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/orders/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns unknown
   * @throws ApiError
   */
  public static ordersControllerRemoveV1(
    data: OrdersControllerRemoveV1Data
  ): CancelablePromise<OrdersControllerRemoveV1Response> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/v1/orders/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}

export class SatisticService {
  /**
   * @param data The data for the request.
   * @param data.startDate
   * @param data.endDate
   * @param data.enumerateBy
   * @param data.status
   * @param data.xCustomLang
   * @returns EnumerateResponseDto
   * @throws ApiError
   */
  public static satisticControllerCountOrderByTimeV1(
    data: SatisticControllerCountOrderByTimeV1Data
  ): CancelablePromise<SatisticControllerCountOrderByTimeV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/satistic/count-order",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        enumerateBy: data.enumerateBy,
        startDate: data.startDate,
        endDate: data.endDate,
        status: data.status,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.startDate
   * @param data.endDate
   * @param data.status
   * @param data.xCustomLang
   * @returns TotalResponseDto
   * @throws ApiError
   */
  public static satisticControllerTotalRevenueV1(
    data: SatisticControllerTotalRevenueV1Data
  ): CancelablePromise<SatisticControllerTotalRevenueV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/satistic/total-revenue",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        startDate: data.startDate,
        endDate: data.endDate,
        status: data.status,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.startDate
   * @param data.endDate
   * @param data.status
   * @param data.xCustomLang
   * @returns TotalResponseDto
   * @throws ApiError
   */
  public static satisticControllerTotalOrderV1(
    data: SatisticControllerTotalOrderV1Data
  ): CancelablePromise<SatisticControllerTotalOrderV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/satistic/total-order",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        startDate: data.startDate,
        endDate: data.endDate,
        status: data.status,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.startDate
   * @param data.endDate
   * @param data.xCustomLang
   * @returns TotalOrderEachStatusResponseDto
   * @throws ApiError
   */
  public static satisticControllerTotalOrderEachStatusV1(
    data: SatisticControllerTotalOrderEachStatusV1Data
  ): CancelablePromise<SatisticControllerTotalOrderEachStatusV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/satistic/total-order-each-status",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        startDate: data.startDate,
        endDate: data.endDate,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.startDate
   * @param data.endDate
   * @param data.status
   * @param data.xCustomLang
   * @returns TotalResponseDto
   * @throws ApiError
   */
  public static satisticControllerTotalCustomerV1(
    data: SatisticControllerTotalCustomerV1Data
  ): CancelablePromise<SatisticControllerTotalCustomerV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/satistic/total-user",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        startDate: data.startDate,
        endDate: data.endDate,
        status: data.status,
      },
    });
  }
}

export class UsersService {
  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns User
   * @throws ApiError
   */
  public static usersControllerCreateV1(
    data: UsersControllerCreateV1Data
  ): CancelablePromise<UsersControllerCreateV1Response> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/users",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.page
   * @param data.limit
   * @param data.filters
   * @param data.sort
   * @param data.xCustomLang
   * @returns InfinityPaginationUserResponseDto
   * @throws ApiError
   */
  public static usersControllerFindAllV1(
    data: UsersControllerFindAllV1Data = {}
  ): CancelablePromise<UsersControllerFindAllV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/users",
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      query: {
        page: data.page,
        limit: data.limit,
        filters: data.filters,
        sort: data.sort,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns User
   * @throws ApiError
   */
  public static usersControllerFindOneV1(
    data: UsersControllerFindOneV1Data
  ): CancelablePromise<UsersControllerFindOneV1Response> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/users/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.requestBody
   * @param data.xCustomLang
   * @returns User
   * @throws ApiError
   */
  public static usersControllerUpdateV1(
    data: UsersControllerUpdateV1Data
  ): CancelablePromise<UsersControllerUpdateV1Response> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/v1/users/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id
   * @param data.xCustomLang
   * @returns void
   * @throws ApiError
   */
  public static usersControllerRemoveV1(
    data: UsersControllerRemoveV1Data
  ): CancelablePromise<UsersControllerRemoveV1Response> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/v1/users/{id}",
      path: {
        id: data.id,
      },
      headers: {
        "x-custom-lang": data.xCustomLang,
      },
    });
  }
}
